{
    "openapi": "3.1.0",
    "info": {
      "version": "1.0.0",
      "title": "Contacts APP",
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "description": "This is a documentation of Contact App"
    },
    "servers": [
      {
        "url": "https://nodejs-hw-mongodb-o381.onrender.com"
      }
    ],
    "tags": [
      {
        "name": "Contacts",
        "description": "Contacts operations."
      },
      {
        "name": "Auth",
        "description": "Auth operations."
      }
    ],
    "paths": {
      "/contacts": {
        "get": {
          "tags": [
            "Contacts"
          ],
          "summary": "Get list of contacts",
          "operationId": "getContacts",
          "description": "Get list of user's contacts",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "query",
              "name": "page",
              "schema": {
                "type": "integer",
                "example": 1
              }
            },
            {
              "in": "query",
              "name": "perPage",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "in": "query",
              "name": "sortOrder",
              "schema": {
                "type": "string",
                "enum": [
                  "acs",
                  "desc"
                ]
              }
            },
            {
              "in": "query",
              "name": "sortBy",
              "schema": {
                "type": "string",
                "example": "contactType",
                "description": "All contact's fields can be mentioned. Default value - _id"
              }
            },
            {
              "in": "query",
              "name": "isFavourite",
              "schema": {
                "type": "boolean",
                "example": false,
                "description": "Filter contacts by isFavourite field value"
              }
            },
            {
              "in": "query",
              "name": "contactType",
              "schema": {
                "type": "string",
                "enum": [
                  "work",
                  "home",
                  "personal"
                ],
                "example": "home"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully found contacts!",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully found contacts!"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "data",
                          "page",
                          "perPage",
                          "totalItems",
                          "totalPages",
                          "hasNextPage",
                          "hasPreviousPage"
                        ],
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/contacts"
                            }
                          },
                          "page": {
                            "type": "integer",
                            "example": 1
                          },
                          "perPage": {
                            "type": "integer",
                            "example": 10
                          },
                          "totalItems": {
                            "type": "integer",
                            "example": 10
                          },
                          "totalPages": {
                            "type": "integer",
                            "example": 15
                          },
                          "hasNextPage": {
                            "type": "boolean",
                            "example": true
                          },
                          "hasPreviousPage": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "post": {
          "tags": [
            "Contacts"
          ],
          "summary": "Create contact",
          "operationId": "createContact",
          "description": "Create a contact with payload",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "phoneNumber",
                    "contactType"
                  ],
                  "properties": {
                    "name": {
                      "description": "Contact`s name",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "phoneNumber": {
                      "description": "Contact`s phone number",
                      "type": "string",
                      "example": "+380000000004"
                    },
                    "email": {
                      "description": "Contact`s email",
                      "type": "string",
                      "example": "example@mail.com"
                    },
                    "isFavourite": {
                      "description": "Whether the contact is marked as a favorite",
                      "type": "boolean",
                      "example": false
                    },
                    "contactType": {
                      "description": "Contact`s type",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ]
                    },
                    "photo": {
                      "description": "Link to contact`s photo",
                      "format": "binary",
                      "type": "string",
                      "example": "https://res.cloudinary.com/dsajigq8r/image/upload/v1742059466/obsbt5gvzved2tvcl1ma.png"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Creates a contact",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 201
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully created a contact!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contacts"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/contacts/{contactId}": {
        "get": {
          "tags": [
            "Contacts"
          ],
          "summary": "Get contact by id",
          "operationId": "getContactById",
          "description": "Get contact by id",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "contactId",
              "required": true,
              "schema": {
                "type": "string",
                "example": "67cece57cf044b5afacf7749"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Get contact by id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully found contact with id 67cece57cf044b5afacf7749!"
                      },
                      "data": {
                        "type": "object",
                        "$ref": "#/components/schemas/contacts"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "patch": {
          "tags": [
            "Contacts"
          ],
          "summary": "Update Contact",
          "operationId": "updateContact",
          "description": "Update contact with provided data",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "contactId",
              "required": true,
              "schema": {
                "type": "string",
                "example": "67cece57cf044b5afacf7749"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Contact`s name",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "phoneNumber": {
                      "description": "Contact`s phone number",
                      "type": "string",
                      "example": "+380000000004"
                    },
                    "email": {
                      "description": "Contact`s email",
                      "type": "string",
                      "example": "example@mail.com"
                    },
                    "isFavourite": {
                      "description": "Whether the contact is marked as a favorite",
                      "type": "boolean",
                      "example": false
                    },
                    "contactType": {
                      "description": "Contact`s type",
                      "type": "string",
                      "enum": [
                        "work",
                        "home",
                        "personal"
                      ]
                    },
                    "photo": {
                      "description": "Link to contact`s photo",
                      "format": "binary",
                      "type": "string",
                      "example": "https://res.cloudinary.com/dsajigq8r/image/upload/v1742059466/obsbt5gvzved2tvcl1ma.png"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Update a contact",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully patched a contact!"
                      },
                      "data": {
                        "$ref": "#/components/schemas/contacts"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        },
        "delete": {
          "tags": [
            "Contacts"
          ],
          "summary": "Delete Contact",
          "operationId": "deleteContact",
          "description": "Delete contact by contactId",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "contactId",
              "required": true,
              "schema": {
                "type": "string",
                "example": "67cece57cf044b5afacf7749"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "User registration",
          "operationId": "register",
          "description": "User registration with provided credentials",
          "security": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name",
                    "email",
                    "password"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "pCVVJHbCsY57"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registration",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": "201"
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully registered a user!"
                      },
                      "data": {
                        "$ref": "#/components/schemas/users"
                      }
                    }
                  }
                }
              }
            },
            "409": {
              "description": "Conflict Error",
              "content": {
                "application\\json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 409
                      },
                      "message": {
                        "type": "string",
                        "example": "ConflictError"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "message"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Email in use"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Log In User",
          "operationId": "login",
          "description": "Log In with provided credentials",
          "security": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "email",
                    "password"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "example@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "pCVVJHbCsY57"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Log In into user's account",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": "200"
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully logged in an user!"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "accessToken"
                        ],
                        "properties": {
                          "accessToken": {
                            "type": "string",
                            "example": "FZ5lUcIf02vxG4jLikawUhFHm2SwUdX5J4ChyJSZQ2sUJYShhEBPmdKF3EUCHtSx"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401",
              "description": "Unauthorized"
            },
            "404": {
              "$ref": "#/components/responses/404",
              "description": "User not found"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Log Out User",
          "operationId": "logout",
          "description": "Log Out from account.",
          "security": [],
          "responses": {
            "204": {
              "description": "No content"
            },
            "401": {
              "$ref": "#/components/responses/401",
              "description": "User is not authenticated"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/refresh": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Refresh user session",
          "operationId": "refreshSession",
          "description": "Refreshing user session taking the token from cookies",
          "security": [],
          "responses": {
            "200": {
              "description": "Successful refreshing",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": "200"
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully refreshed a session!"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "accessToken"
                        ],
                        "properties": {
                          "accessToken": {
                            "type": "string",
                            "example": "FZ5lUcIf02vxG4jLikawUhFHm2SwUdX5J4ChyJSZQ2sUJYShhEBPmdKF3EUCHtSx"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401",
              "description": "Session not found"
            },
            "404": {
              "$ref": "#/components/responses/404"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/send-reset-email": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Send reset message",
          "operationId": "sendResetEmail",
          "description": "Send email to reset user password",
          "security": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "example@mail.com"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully sent reset password message",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Reset password email was successfully sent!"
                      },
                      "data": {}
                    }
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/404",
              "description": "User not found"
            },
            "500": {
              "$ref": "#/components/responses/500",
              "description": "Failed to send the email, please try again later."
            }
          }
        }
      },
      "/auth/reset-pwd": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Reset user's password",
          "operationId": "resetPwd",
          "description": "Reset user's password from sended reset email",
          "security": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "token",
                    "password"
                  ],
                  "properties": {
                    "password": {
                      "type": "string",
                      "example": "pCVVJHbCsY57"
                    },
                    "token": {
                      "type": "string",
                      "example": "FZ5lUcIf02vxG4jLikawUhFHm2SwUdX5J4ChyJSZQ2sUJYShhEBPmdKF3EUCHtSx"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Change user's password providing a new pass and token",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Password has been successfully reset"
                      },
                      "data": {}
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401",
              "description": "Token is expired or invalid."
            },
            "404": {
              "$ref": "#/components/responses/404",
              "description": "User not found"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/get-oauth-url": {
        "get": {
          "tags": [
            "Auth"
          ],
          "summary": "Get OAuth url",
          "operationId": "getOAuthUrl",
          "description": "Generate Google OAuth 2.0 url for sign up or sign in operations",
          "security": [],
          "responses": {
            "200": {
              "description": "Get google oauth url",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully get Google OAuth url!"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "example": "${Google OAuth Url}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      },
      "/auth/confirm-oauth": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "confirm Auth by Google OAuth Code",
          "operationId": "confirmOAuth",
          "description": "Sign Up or Sign In with Google OAuth code from recently received URL",
          "security": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "4/0AanRRruk9D1yklKZqsudSwp4pYCol7gYRk4EVnC4HEjh9sssYUNNHW1XHFIOuYn4vbqPJg"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login or Sign Un and Login with Google OAuth",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "status",
                      "message",
                      "data"
                    ],
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 200
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully logged in via Google OAuth!"
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "accessToken"
                        ],
                        "properties": {
                          "accessToken": {
                            "type": "string",
                            "example": "FZ5lUcIf02vxG4jLikawUhFHm2SwUdX5J4ChyJSZQ2sUJYShhEBPmdKF3EUCHtSx"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/401"
            },
            "500": {
              "$ref": "#/components/responses/500"
            }
          }
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      },
      "schemas": {
        "contacts": {
          "type": "object",
          "required": [
            "name",
            "phoneNumber",
            "contactType",
            "userId"
          ],
          "properties": {
            "_id": {
              "description": "Contact's id",
              "type": "string",
              "example": "67cece57cf044b5afacf7749"
            },
            "userId": {
              "description": "Contact's user id",
              "type": "string",
              "example": "67cd81343b84f810f27e521f"
            },
            "name": {
              "description": "Contact's name",
              "type": "string",
              "example": "John Doe"
            },
            "phoneNumber": {
              "description": "Contact's phone number",
              "type": "string",
              "example": "+380000000004"
            },
            "email": {
              "description": "Contact's email",
              "type": "string",
              "example": "example@mail.com"
            },
            "isFavourite": {
              "description": "Whether the contact is marked as a favorite",
              "type": "boolean",
              "example": false
            },
            "contactType": {
              "description": "Contact's type",
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ]
            },
            "photo": {
              "description": "Link to contact's photo",
              "type": "string",
              "example": "https://res.cloudinary.com/dsajigq8r/image/upload/v1742059466/obsbt5gvzved2tvcl1ma.png"
            }
          }
        },
        "users": {
          "type": "object",
          "required": [
            "name",
            "email",
            "password"
          ],
          "properties": {
            "_id": {
              "description": "User's id",
              "type": "string",
              "example": "67cd81343b84f810f27e521f"
            },
            "name": {
              "description": "User's name",
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "description": "User's email",
              "type": "string",
              "example": "example@mail.com"
            },
            "password": {
              "description": "User's password",
              "type": "string",
              "example": "pCVVJHbCsY57"
            }
          }
        }
      },
      "responses": {
        "401": {
          "description": "Unauthorized error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 401
                  },
                  "message": {
                    "type": "string",
                    "example": "UnauthorizedError"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Not Found Error",
          "content": {
            "application\\json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 404
                  },
                  "message": {
                    "type": "string",
                    "example": "NotFoundError"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not Found"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal Server Error",
          "content": {
            "application\\json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "message",
                  "data"
                ],
                "properties": {
                  "status": {
                    "type": "integer",
                    "example": 500
                  },
                  "message": {
                    "type": "string",
                    "example": "Something went wrong"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Server Error"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }